local animationIds = {
    "rbxassetid://9004502156",
    "rbxassetid://9017185681",
    "rbxassetid://9125160646",
    "rbxassetid://9077736277",
    "rbxassetid://9077749264",
    "rbxassetid://9078040601",
    "rbxassetid://5436083192",
    "rbxassetid://5436059670",
    "rbxassetid://4061495031",
    "rbxassetid://3857610554",
    "rbxassetid://9117803523",
    "rbxassetid://9091105108",
    "rbxassetid://9027998635",
    "rbxassetid://8986981647",
    "rbxassetid://9027998635",
    "rbxassetid://9027998635",
    "rbxassetid://9027998635",
    "rbxassetid://9027998635"
}

local localPlayer = game:GetService("Players").LocalPlayer
local scriptEnabled = false

-- Function to calculate the distance between two parts
local function getDistance(partA, partB)
    return (partA.Position - partB.Position).Magnitude
end

-- Function to handle animation played event
local function onAnimationPlayed(character, track)
    if not scriptEnabled then
        return
    end
    
    if character ~= localPlayer.Character and table.find(animationIds, track.Animation.AnimationId) then
        -- Check distance between the characters
        local localCharacter = localPlayer.Character
        local characterRoot = character:FindFirstChild("HumanoidRootPart")
        local localCharacterRoot = localCharacter and localCharacter:FindFirstChild("HumanoidRootPart")
        
        if characterRoot and localCharacterRoot then
            local distance = getDistance(characterRoot, localCharacterRoot)
            local maxDistance = 21 -- Maximum allowed distance

            if distance <= maxDistance then
                -- Simulate pressing the "E" key
                game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.E, false, nil)
            end
        end
    end
end

-- Function to handle character added event
local function onCharacterAdded(character)
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.AnimationPlayed:Connect(function(track)
        onAnimationPlayed(character, track)
    end)
end

-- Function to handle player added event
local function onPlayerAdded(player)
    player.CharacterAdded:Connect(function(character)
        onCharacterAdded(character)
    end)
    if player ~= localPlayer then
        onCharacterAdded(player.Character)
    end
end

-- Connect events for existing players
for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
    onPlayerAdded(player)
end

-- Connect event for new players
game:GetService("Players").PlayerAdded:Connect(function(player)
    onPlayerAdded(player)
end)

-- Function to toggle the script state
local function toggleScript()
    scriptEnabled = not scriptEnabled
    print("Script " .. (scriptEnabled and "enabled" or "disabled"))
end

-- Key press event listener
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.C then
        toggleScript()
    end
end)
